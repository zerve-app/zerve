diff --git a/.prettierrc b/.prettierrc
new file mode 100644
index 0000000000000000000000000000000000000000..193703ab7bf405dc27ab3a5bab5b8fe7e44bd84c
--- /dev/null
+++ b/.prettierrc
@@ -0,0 +1,7 @@
+{
+  "semi": true,
+  "useTabs": false,
+  "tabWidth": 2,
+  "singleQuote": true,
+  "trailingComma": "es5"
+}
diff --git a/src/useOnAction.tsx b/src/useOnAction.tsx
index 9156565a9096960d942a3ecfe1260bb5a05d7cc8..cd320d2c43f1f09cda756d4758e4578a528b9ace 100644
--- a/src/useOnAction.tsx
+++ b/src/useOnAction.tsx
@@ -95,7 +95,8 @@ export default function useOnAction({
               beforeRemoveListeners,
               state.routes,
               result.routes,
-              action
+              action,
+              result
             );
 
             if (isPrevented) {
@@ -155,6 +156,8 @@ export default function useOnAction({
     getState,
     emitter,
     beforeRemoveListeners,
+    router,
+    routerConfigOptions: routerConfigOptionsRef.current,
   });
 
   React.useEffect(
diff --git a/src/useOnPreventRemove.tsx b/src/useOnPreventRemove.tsx
index 268ea314be1ea7186210b67c6fcaca27f86f38d8..85eb0b8dbd18659bcd49fda9175e10db2bd47e2f 100644
--- a/src/useOnPreventRemove.tsx
+++ b/src/useOnPreventRemove.tsx
@@ -24,7 +24,8 @@ export const shouldPreventRemove = (
   beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>,
   currentRoutes: { key: string }[],
   nextRoutes: { key?: string | undefined }[],
-  action: NavigationAction
+  action: NavigationAction,
+  result: any
 ) => {
   const nextRouteKeys = nextRoutes.map((route) => route.key);
 
@@ -60,7 +61,10 @@ export const shouldPreventRemove = (
     const event = emitter.emit({
       type: 'beforeRemove',
       target: route.key,
-      data: { action: beforeRemoveAction },
+      data: {
+        action: beforeRemoveAction,
+        destinationRoute: result !== null ? result.routes[result.index] : null,
+      },
       canPreventDefault: true,
     });
 
@@ -76,6 +80,8 @@ export default function useOnPreventRemove({
   getState,
   emitter,
   beforeRemoveListeners,
+  router,
+  routerConfigOptions,
 }: Options) {
   const { addKeyedListener } = React.useContext(NavigationBuilderContext);
   const route = React.useContext(NavigationRouteContext);
@@ -85,13 +91,18 @@ export default function useOnPreventRemove({
     if (routeKey) {
       return addKeyedListener?.('beforeRemove', routeKey, (action) => {
         const state = getState();
-
+        const result = router.getStateForAction(
+          state,
+          action,
+          routerConfigOptions
+        );
         return shouldPreventRemove(
           emitter,
           beforeRemoveListeners,
           state.routes,
           [],
-          action
+          action,
+          result
         );
       });
     }
